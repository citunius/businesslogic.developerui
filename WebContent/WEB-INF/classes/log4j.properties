###################################################################
# Logging Configuration
###################################################################

# Default level is WARN, logger name is file(valid levels: DEBUG, INFO, WARN, ERROR, FATAL)
#log4j.rootLogger=TRACE, file, stdout, stderr
#log4j.rootLogger=DEBUG, file, stdout, stderr
log4j.rootLogger=DEBUG, stdout, stderr
#log4j.rootLogger=WARN, file 
#log4j.rootLogger=ERROR, file
#log4j.rootLogger=FATAL, file  

# configure stdout
# set the conversion pattern of stdout
# Print the date in ISO 8601 format
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Threshold = INFO
log4j.appender.stdout.Threshold = DEBUG
log4j.appender.stdout.Target   = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern = %-5p %d [%t][%F:%L] : %m%n
log4j.appender.stdout.layout.ConversionPattern = [%p] [%F:%L] : [%X{tenantId}] : [%X{accountId}] : %m%n

# configure stderr
# We push only WARN, ERROR and FATAL messages in standard error appender
# set the conversion pattern of stdout
# Print the date in ISO 8601 format
log4j.appender.stderr = org.apache.log4j.ConsoleAppender
log4j.appender.stderr.Threshold = WARN
log4j.appender.stderr.Target   = System.err
log4j.appender.stderr.layout = org.apache.log4j.PatternLayout
#log4j.appender.stderr.layout.ConversionPattern = %-5p %d [%t][%F:%L] : %m%n
log4j.appender.stderr.layout.ConversionPattern = [%p] %d [%t][%F:%L] : [%X{tenantId}] : [%X{accountId}] : %m%n


# In Log4j you can specify a logging level for specified package
# log4j.logger.<your package> = DEBUG|INFO|OFF|WARN...
log4j.logger.org.rmrodrigues=WARN
log4j.logger.ro.fortsoft=WARN
log4j.logger.org.slf4j.impl=WARN
de.citunius.businesslogicapi=WARN


